{"version":3,"sources":["../assets/scripts/search-box.js","../assets/scripts/mtiFontTrackingCode.js"],"names":["setUpOCSsearch","init","self","this","h1","document","querySelector","className","documentElement","search","title","body","indexOf","firstChild","nodeValue","widthOffset","searchBoxWidth","clientWidth","lenTest","getElementById","searchOriginalFontSize","window","getComputedStyle","getPropertyValue","sizeChanged","setAttribute","innerHTML","checkSearchBoxLength","addEventListener","handleSearchChange","focusInput","evt","width","style","fontSize","Math","max","min","parseFloat","text_length","value","length","innerWidth","onreadystatechange","readyState","projectId","mtiTracking","createElement","type","rel","href","location","protocol","getElementsByTagName","appendChild"],"mappings":"AACA,GAAAA,iBACAC,KAAA,WACAC,KAAAC,KAEAA,KAAAC,GAAAC,SAAAC,cAAA,MAEAH,KAAAC,GAAAG,UAAA,UAGAF,SAAAG,gBAAAD,UAAA,KAEAJ,KAAAM,OAAAJ,SAAAC,cAAA,iBACAH,KAAAO,MAAA,KAAAL,SAAAM,KAAAJ,UAAAK,QAAA,QAAA,SAAAT,KAAAC,GAAAS,WAAAC,UAGAX,KAAAY,YAAAV,SAAAC,cAAA,sBAAA,IAAA,GACAH,KAAAa,eAAAb,KAAAM,OAAAQ,YAAAf,KAAAa,YACAZ,KAAAe,QAAAb,SAAAc,eAAA,eACAhB,KAAAiB,uBAAAC,OAAAC,iBAAAnB,KAAAM,OAAA,MAAAc,iBAAA,aACApB,KAAAqB,aAAA,EAIArB,KAAAM,OAAAgB,aAAA,cAAAvB,KAAAQ,OACAP,KAAAM,OAAAgB,aAAA,oBAAAvB,KAAAkB,wBAGAjB,KAAAe,QAAAQ,UAAAxB,KAAAQ,MAEAR,KAAAyB,uBAGAxB,KAAAM,OAAAmB,iBAAA,QAAA1B,KAAA2B,oBACA1B,KAAAM,OAAAmB,iBAAA,iBAAA1B,KAAA2B,oBACA1B,KAAAM,OAAAmB,iBAAA,OAAA1B,KAAA2B,oBACA1B,KAAAM,OAAAmB,iBAAA,QAAA1B,KAAA4B,aAKAA,WAAA,WACA5B,KAAAO,OAAAgB,aAAA,cAAA,KAGAE,qBAAA,SAAAI,GACA,GAAAC,GAAA9B,KAAAgB,QAAAD,YAAA,CACAe,GAAA9B,KAAAc,gBAEAd,KAAAO,OAAAwB,MAAAC,SAAAC,KAAAC,IAAAD,KAAAE,IAAAnC,KAAAc,eAAAgB,EAAA,GAAAM,WAAA,KAAAA,WAAA,KAAA,KACApC,KAAAsB,aAAA,GACAtB,KAAAsB,aAAAQ,EAAA9B,KAAAc,iBACAd,KAAAO,OAAAwB,MAAAC,SAAAhC,KAAAkB,yBAIAS,mBAAA,SAAAE,GACA,GAAAQ,GAAArC,KAAAO,OAAA+B,MAAAC,MAEAvC,MAAAgB,QAAAQ,UAAAxB,KAAAO,OAAA+B,MAEA,IAAAD,IACArC,KAAAO,OAAAgB,aAAA,cAAAvB,KAAAQ,OACAR,KAAAgB,QAAAQ,UAAAxB,KAAAQ,OAEAR,KAAAyB,wBAKAN,QAAAqB,WAAA,MAEArC,SAAAG,gBAAAD,UAAA,UAIAF,SAAAsC,mBAAA,WACA,gBAAAtC,SAAAuC,YACA5C,eAAAC,QC5EA,IAAA4C,WAAA,KACAC,YAAAzC,SAAA0C,cAAA,OAEAD,aAAAE,KAAA,WACAF,YAAAG,IAAA,aACAH,YAAAI,MAAA,WAAA7C,SAAA8C,SAAAC,SAAA,SAAA,SAAA,kDAAAP,WACAxC,SAAAgD,qBAAA,QAAA,IAAAhD,SAAAgD,qBAAA,QAAA,IAAAC,YAAAR","file":"inline-head.js","sourcesContent":["\nvar setUpOCSsearch = {\n  init: function() {\n\tself = this;\n\n\tthis.h1 = document.querySelector('h1');\n\t// Hide the h1 immediately\n\tthis.h1.className = 'sr-only';\n\n\t// hello world\n\tdocument.documentElement.className = 'js';\n\n\tthis.search = document.querySelector('#search-field');\n\tthis.title = document.body.className.indexOf('home') !== -1 ? 'Search' : this.h1.firstChild.nodeValue;\n\n\t// Little breathing room for grid/list buttons. Oh, flexbox.\n\tthis.widthOffset = document.querySelector('#cpt-listings-wrap') ? 150 : 42;\n\tthis.searchBoxWidth = this.search.clientWidth - self.widthOffset;\n\tthis.lenTest = document.getElementById('length-test');\n\tthis.searchOriginalFontSize = window.getComputedStyle(this.search, null).getPropertyValue('font-size');\n\tthis.sizeChanged = false;\n\n\n\t// Move the title to the searchbox\n\tthis.search.setAttribute('placeholder', self.title);\n\tthis.search.setAttribute('data-og-font-size', self.searchOriginalFontSize);\n\n\t// Stuff the hidden length checker\n\tthis.lenTest.innerHTML = self.title;\n\t// And check the new length\n\tself.checkSearchBoxLength();\n\n\t// Do stuff\n\tthis.search.addEventListener('input', self.handleSearchChange);\n\tthis.search.addEventListener('propertychange', self.handleSearchChange);\n\tthis.search.addEventListener('blur', self.handleSearchChange);\n\tthis.search.addEventListener('focus', self.focusInput);\n\n  },\n\n  // When the user clicks out of the box, reset the placeholder if empty\n  focusInput: function() {\n\tself.search.setAttribute('placeholder', \"\");\n  },\n\n  checkSearchBoxLength: function(evt) {\n\tvar width = (self.lenTest.clientWidth + 1);// + \"px\";\n\tif (width > self.searchBoxWidth) {\n\t  // resize on change but set a min and max font-size\n\t  self.search.style.fontSize = Math.max(Math.min((self.searchBoxWidth/width)*33, parseFloat(33)), parseFloat(13))+\"px\";\n\t  self.sizeChanged = true;\n\t} else if(self.sizeChanged && width < self.searchBoxWidth) {\n\t  self.search.style.fontSize = self.searchOriginalFontSize;\n\t}\n  },\n\n  handleSearchChange: function(evt) {\n\tvar text_length = self.search.value.length;\n\t// Update the measuring div\n\tself.lenTest.innerHTML = self.search.value;\n\t// Empty? reset it all\n\tif (text_length === 0) {\n\t  self.search.setAttribute('placeholder', self.title);\n\t  self.lenTest.innerHTML = self.title;\n\t}\n\tself.checkSearchBoxLength();\n  }\n};\n\n// also on window.resize?\nif (window.innerWidth > 767) {\n    //skip waiting for doc ready to hide the h1\n\tdocument.documentElement.className = 'no-fouc';\n\n\t// Only need to wait because of a body class check for .home\n\t// probably better to update page-header.php with something else.\n\tdocument.onreadystatechange = function () {\n\t\tif (document.readyState === \"interactive\") {\n\t\t  setUpOCSsearch.init();\n\t\t}\n\t};\n}\n","\n//var projectId = window.MTIProjectId, //doesn't exist!\nvar projectId = null,\n\tmtiTracking = document.createElement('link');\n\nmtiTracking.type = 'text/css';\nmtiTracking.rel = 'stylesheet';\nmtiTracking.href = ('https:' === document.location.protocol ? 'https:' : 'http:') + '//fast.fonts.net/t/1.css?apiType=css&projectid=' + projectId;\n(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(mtiTracking);\n\n"],"sourceRoot":"assets/scripts/"}