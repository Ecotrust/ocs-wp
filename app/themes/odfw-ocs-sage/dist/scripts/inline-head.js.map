{"version":3,"sources":["../assets/scripts/search-box.js","../assets/scripts/mtiFontTrackingCode.js"],"names":["setUpOCSsearch","init","self","this","h1","document","querySelector","className","search","title","body","indexOf","firstChild","nodeValue","lenTest","getElementById","searchBoxWidth","clientWidth","searchOriginalFontSize","window","getComputedStyle","getPropertyValue","sizeChanged","setAttribute","innerHTML","checkSearchBoxLength","addEventListener","handleSearchChange","focusInput","evt","width","style","fontSize","Math","max","min","parseFloat","text_length","value","length","innerWidth","onreadystatechange","readyState","projectId","mtiTracking","createElement","type","rel","href","location","protocol","getElementsByTagName","appendChild"],"mappings":"AACA,GAAAA,iBACAC,KAAA,WACAC,KAAAC,KAEAA,KAAAC,GAAAC,SAAAC,cAAA,MAEAH,KAAAC,GAAAG,UAAA,UAEAJ,KAAAK,OAAAH,SAAAC,cAAA,iBACAH,KAAAM,MAAA,KAAAJ,SAAAK,KAAAH,UAAAI,QAAA,QAAA,SAAAR,KAAAC,GAAAQ,WAAAC,UACAV,KAAAW,QAAAT,SAAAU,eAAA,eACAZ,KAAAa,eAAAb,KAAAK,OAAAS,YAAA,GACAd,KAAAe,uBAAAC,OAAAC,iBAAAjB,KAAAK,OAAA,MAAAa,iBAAA,aACAlB,KAAAmB,aAAA,EAIAnB,KAAAK,OAAAe,aAAA,cAAArB,KAAAO,OACAN,KAAAK,OAAAe,aAAA,oBAAArB,KAAAgB,wBAGAf,KAAAW,QAAAU,UAAAtB,KAAAO,MAEAP,KAAAuB,uBAGAtB,KAAAK,OAAAkB,iBAAA,QAAAxB,KAAAyB,oBACAxB,KAAAK,OAAAkB,iBAAA,iBAAAxB,KAAAyB,oBACAxB,KAAAK,OAAAkB,iBAAA,OAAAxB,KAAAyB,oBACAxB,KAAAK,OAAAkB,iBAAA,QAAAxB,KAAA0B,aAKAA,WAAA,WACA1B,KAAAM,OAAAe,aAAA,cAAA,KAGAE,qBAAA,SAAAI,GACA,GAAAC,GAAA5B,KAAAY,QAAAG,YAAA,CACAa,GAAA5B,KAAAc,gBAEAd,KAAAM,OAAAuB,MAAAC,SAAAC,KAAAC,IAAAD,KAAAE,IAAAjC,KAAAc,eAAAc,EAAA,GAAAM,WAAA,KAAAA,WAAA,KAAA,KACAlC,KAAAoB,aAAA,GACApB,KAAAoB,aAAAQ,EAAA5B,KAAAc,iBACAd,KAAAM,OAAAuB,MAAAC,SAAA9B,KAAAgB,yBAIAS,mBAAA,SAAAE,GACA,GAAAQ,GAAAnC,KAAAM,OAAA8B,MAAAC,MAEArC,MAAAY,QAAAU,UAAAtB,KAAAM,OAAA8B,MACA,IAAAD,IACAnC,KAAAM,OAAAe,aAAA,cAAArB,KAAAO,OACAP,KAAAY,QAAAU,UAAAtB,KAAAO,OAEAP,KAAAuB,wBAIAN,QAAAqB,WAAA,MAEAnC,SAAAoC,mBAAA,WACA,gBAAApC,SAAAqC,YACA1C,eAAAC,QChEA,IAAA0C,WAAA,KACAC,YAAAvC,SAAAwC,cAAA,OAEAD,aAAAE,KAAA,WACAF,YAAAG,IAAA,aACAH,YAAAI,MAAA,WAAA3C,SAAA4C,SAAAC,SAAA,SAAA,SAAA,kDAAAP,WACAtC,SAAA8C,qBAAA,QAAA,IAAA9C,SAAA8C,qBAAA,QAAA,IAAAC,YAAAR","file":"inline-head.js","sourcesContent":["\nvar setUpOCSsearch = {\n  init: function() {\n\tself = this;\n\n\tthis.h1 = document.querySelector('h1');\n\t// Hide the h1 immediately\n\tthis.h1.className = 'sr-only';\n\n\tthis.search = document.querySelector('#search-field');\n\tthis.title = document.body.className.indexOf('home') !== -1 ? 'Search' : this.h1.firstChild.nodeValue;\n\tthis.lenTest = document.getElementById('length-test');\n\tthis.searchBoxWidth = this.search.clientWidth - 40;\n\tthis.searchOriginalFontSize = window.getComputedStyle(this.search, null).getPropertyValue('font-size');\n\tthis.sizeChanged = false;\n\n\n\t// Move it to the searchbox\n\tthis.search.setAttribute('placeholder', self.title);\n\tthis.search.setAttribute('data-og-font-size', self.searchOriginalFontSize);\n\n\t// Stuff the hidden length checker\n\tthis.lenTest.innerHTML = self.title;\n\t// And check the new length\n\tself.checkSearchBoxLength();\n\n\t// Do stuff\n\tthis.search.addEventListener('input', self.handleSearchChange);\n\tthis.search.addEventListener('propertychange', self.handleSearchChange);\n\tthis.search.addEventListener('blur', self.handleSearchChange);\n\tthis.search.addEventListener('focus', self.focusInput);\n\n  },\n\n  // When the user clicks out of the box, reset the placeholder if empty\n  focusInput: function() {\n\tself.search.setAttribute('placeholder', \"\");\n  },\n\n  checkSearchBoxLength: function(evt) {\n\tvar width = (self.lenTest.clientWidth + 1);// + \"px\";\n\tif (width > self.searchBoxWidth) {\n\t  // resize on change but set a min and max font-size\n\t  self.search.style.fontSize = Math.max(Math.min((self.searchBoxWidth/width)*33, parseFloat(33)), parseFloat(13))+\"px\";\n\t  self.sizeChanged = true;\n\t} else if(self.sizeChanged && width < self.searchBoxWidth) {\n\t  self.search.style.fontSize = self.searchOriginalFontSize;\n\t}\n  },\n\n  handleSearchChange: function(evt) {\n\tvar text_length = self.search.value.length;\n\t// Update our measuring div\n\tself.lenTest.innerHTML = self.search.value;\n\tif (text_length === 0) {\n\t  self.search.setAttribute('placeholder', self.title);\n\t  self.lenTest.innerHTML = self.title;\n\t}\n\tself.checkSearchBoxLength();\n  }\n};\n\nif (window.innerWidth > 767) {\n  // also on window.resize?\n\tdocument.onreadystatechange = function () {\n\t\tif (document.readyState === \"interactive\") {\n\t\t  setUpOCSsearch.init();\n\t\t}\n\t};\n}\n","\n//var projectId = window.MTIProjectId, //doesn't exist!\nvar projectId = null,\n\tmtiTracking = document.createElement('link');\n\nmtiTracking.type = 'text/css';\nmtiTracking.rel = 'stylesheet';\nmtiTracking.href = ('https:' === document.location.protocol ? 'https:' : 'http:') + '//fast.fonts.net/t/1.css?apiType=css&projectid=' + projectId;\n(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(mtiTracking);\n\n"],"sourceRoot":"assets/scripts/"}