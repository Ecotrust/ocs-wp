{"version":3,"sources":["../bower_components/anchor-js/anchor.js"],"names":["AnchorJS","options","this","_applyRemainingDefaultOptions","opts","icon","hasOwnProperty","visible","placement","add","selector","elements","elsWithIds","idList","elementID","i","roughText","tidyText","index","count","newTidyText","readableID","anchor","Error","document","querySelectorAll","length","_addBaselineStyles","map","call","el","id","hasAttribute","getAttribute","textContent","replace","substring","toLowerCase","undefined","indexOf","push","setAttribute","createElement","className","href","style","opacity","fontFamily","fontStyle","fontVariant","fontWeight","lineHeight","position","marginLeft","paddingRight","insertBefore","firstChild","paddingLeft","appendChild","remove","domAnchor","querySelector","removeChild","head","firstStyleEl","linkRule","hoverRule","anchorjsLinkFontFace","pseudoElContent","createTextNode","sheet","insertRule","cssRules","anchors"],"mappings":"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","file":"anchor.js","sourcesContent":["/**\n * AnchorJS - v1.3.0 - 2015-09-22\n * https://github.com/bryanbraun/anchorjs\n * Copyright (c) 2015 Bryan Braun; Licensed MIT\n */\n\nfunction AnchorJS(options) {\n  'use strict';\n\n  this.options = options || {};\n\n  this._applyRemainingDefaultOptions = function(opts) {\n    this.options.icon = this.options.hasOwnProperty('icon') ? opts.icon : '\\ue9cb'; // Accepts characters (and also URLs?), like  '#', '¶', '❡', or '§'.\n    this.options.visible = this.options.hasOwnProperty('visible') ? opts.visible : 'hover'; // Also accepts 'always'\n    this.options.placement = this.options.hasOwnProperty('placement') ? opts.placement : 'right'; // Also accepts 'left'\n    this.options.class = this.options.hasOwnProperty('class') ? opts.class : ''; // Accepts any class name.\n  };\n\n  this._applyRemainingDefaultOptions(options);\n\n  this.add = function(selector) {\n    var elements,\n        elsWithIds,\n        idList,\n        elementID,\n        i,\n        roughText,\n        tidyText,\n        index,\n        count,\n        newTidyText,\n        readableID,\n        anchor;\n\n    this._applyRemainingDefaultOptions(this.options);\n\n    // Provide a sensible default selector, if none is given.\n    if (!selector) {\n      selector = 'h1, h2, h3, h4, h5, h6';\n    } else if (typeof selector !== 'string') {\n      throw new Error('The selector provided to AnchorJS was invalid.');\n    }\n\n    elements = document.querySelectorAll(selector);\n    if (elements.length === 0) {\n      return false;\n    }\n\n    this._addBaselineStyles();\n\n    // We produce a list of existing IDs so we don't generate a duplicate.\n    elsWithIds = document.querySelectorAll('[id]');\n    idList = [].map.call(elsWithIds, function assign(el) {\n      return el.id;\n    });\n\n    for (i = 0; i < elements.length; i++) {\n\n      if (elements[i].hasAttribute('id')) {\n        elementID = elements[i].getAttribute('id');\n      } else {\n        roughText = elements[i].textContent;\n\n        // Refine it so it makes a good ID. Strip out non-safe characters, replace\n        // spaces with hyphens, truncate to 32 characters, and make toLowerCase.\n        //\n        // Example string:                                // '⚡⚡⚡ Unicode icons are cool--but they definitely don't belong in a URL fragment.'\n        tidyText = roughText.replace(/[^\\w\\s-]/gi, '')    // ' Unicode icons are cool--but they definitely dont belong in a URL fragment'\n                                .replace(/\\s+/g, '-')     // '-Unicode-icons-are-cool--but-they-definitely-dont-belong-in-a-URL-fragment'\n                                .replace(/-{2,}/g, '-')   // '-Unicode-icons-are-cool-but-they-definitely-dont-belong-in-a-URL-fragment'\n                                .substring(0, 64)         // '-Unicode-icons-are-cool-but-they-definitely-dont-belong-in-a-URL'\n                                .replace(/^-+|-+$/gm, '') // 'Unicode-icons-are-cool-but-they-definitely-dont-belong-in-a-URL'\n                                .toLowerCase();           // 'unicode-icons-are-cool-but-they-definitely-dont-belong-in-a-url'\n\n        // Compare our generated ID to existing IDs (and increment it if needed)\n        // before we add it to the page.\n        newTidyText = tidyText;\n        count = 0;\n        do {\n          if (index !== undefined) {\n            newTidyText = tidyText + '-' + count;\n          }\n          // .indexOf is supported in IE9+.\n          index = idList.indexOf(newTidyText);\n          count += 1;\n        } while (index !== -1);\n        index = undefined;\n        idList.push(newTidyText);\n\n        // Assign it to our element.\n        // Currently the setAttribute element is only supported in IE9 and above.\n        elements[i].setAttribute('id', newTidyText);\n\n        elementID = newTidyText;\n      }\n\n      readableID = elementID.replace(/-/g, ' ');\n\n      // The following code builds the following DOM structure in a more effiecient (albeit opaque) way.\n      // '<a class=\"anchorjs-link ' + this.options.class + '\" href=\"#' + elementID + '\" aria-label=\"Anchor link for: ' + readableID + '\" data-anchorjs-icon=\"' + this.options.icon + '\"></a>';\n      anchor = document.createElement('a');\n      anchor.className = 'anchorjs-link ' + this.options.class;\n      anchor.href = '#' + elementID;\n      anchor.setAttribute('aria-label', 'Anchor link for: ' + readableID);\n      anchor.setAttribute('data-anchorjs-icon', this.options.icon);\n\n      if (this.options.visible === 'always') {\n        anchor.style.opacity = '1';\n      }\n\n      if (this.options.icon === '\\ue9cb') {\n        anchor.style.fontFamily = 'anchorjs-icons';\n        anchor.style.fontStyle = 'normal';\n        anchor.style.fontVariant = 'normal';\n        anchor.style.fontWeight = 'normal';\n        anchor.style.lineHeight = 1;\n        // We set lineHeight = 1 here because the `anchorjs-icons` font family could otherwise affect the\n        // height of the heading. This isn't the case for icons with `placement: left`, so we restore\n        // line-height: inherit in that case, ensuring they remain positioned correctly. For more info,\n        // see https://github.com/bryanbraun/anchorjs/issues/39.\n        if (this.options.placement === 'left') {\n          anchor.style.lineHeight = 'inherit';\n        }\n      }\n\n      if (this.options.placement === 'left') {\n        anchor.style.position = 'absolute';\n        anchor.style.marginLeft = '-1em';\n        anchor.style.paddingRight = '0.5em';\n        elements[i].insertBefore(anchor, elements[i].firstChild);\n      } else { // if the option provided is `right` (or anything else).\n        anchor.style.paddingLeft = '0.375em';\n        elements[i].appendChild(anchor);\n      }\n    }\n\n    return this;\n  };\n\n  this.remove = function(selector) {\n    var domAnchor,\n        elements = document.querySelectorAll(selector);\n    for (var i = 0; i < elements.length; i++) {\n      domAnchor = elements[i].querySelector('.anchorjs-link');\n      if (domAnchor) {\n        elements[i].removeChild(domAnchor);\n      }\n    }\n    return this;\n  };\n\n  this._addBaselineStyles = function() {\n    // We don't want to add global baseline styles if they've been added before.\n    if (document.head.querySelector('style.anchorjs') !== null) {\n      return;\n    }\n\n    var style = document.createElement('style'),\n        linkRule =\n        ' .anchorjs-link {'                       +\n        '   opacity: 0;'                          +\n        '   text-decoration: none;'               +\n        '   -webkit-font-smoothing: antialiased;' +\n        '   -moz-osx-font-smoothing: grayscale;'  +\n        ' }',\n        hoverRule =\n        ' *:hover > .anchorjs-link,'              +\n        ' .anchorjs-link:focus  {'                +\n        '   opacity: 1;'                          +\n        ' }',\n        anchorjsLinkFontFace =\n        ' @font-face {'                           +\n        '   font-family: \"anchorjs-icons\";'       +\n        '   font-style: normal;'                  +\n        '   font-weight: normal;'                 + // Icon from icomoon; 10px wide & 10px tall; 2 empty below & 4 above\n        '   src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAALAIAAAwAwT1MvMg8SBTUAAAC8AAAAYGNtYXAWi9QdAAABHAAAAFRnYXNwAAAAEAAAAXAAAAAIZ2x5Zgq29TcAAAF4AAABNGhlYWQEZM3pAAACrAAAADZoaGVhBhUDxgAAAuQAAAAkaG10eASAADEAAAMIAAAAFGxvY2EAKACuAAADHAAAAAxtYXhwAAgAVwAAAygAAAAgbmFtZQ5yJ3cAAANIAAAB2nBvc3QAAwAAAAAFJAAAACAAAwJAAZAABQAAApkCzAAAAI8CmQLMAAAB6wAzAQkAAAAAAAAAAAAAAAAAAAABEAAAAAAAAAAAAAAAAAAAAABAAADpywPA/8AAQAPAAEAAAAABAAAAAAAAAAAAAAAgAAAAAAADAAAAAwAAABwAAQADAAAAHAADAAEAAAAcAAQAOAAAAAoACAACAAIAAQAg6cv//f//AAAAAAAg6cv//f//AAH/4xY5AAMAAQAAAAAAAAAAAAAAAQAB//8ADwABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAQAAAAAAAAAAAAIAADc5AQAAAAACADEARAJTAsAAKwBUAAABIiYnJjQ/AT4BMzIWFxYUDwEGIicmND8BNjQnLgEjIgYPAQYUFxYUBw4BIwciJicmND8BNjIXFhQPAQYUFx4BMzI2PwE2NCcmNDc2MhcWFA8BDgEjARQGDAUtLXoWOR8fORYtLTgKGwoKCjgaGg0gEhIgDXoaGgkJBQwHdR85Fi0tOAobCgoKOBoaDSASEiANehoaCQkKGwotLXoWOR8BMwUFLYEuehYXFxYugC44CQkKGwo4GkoaDQ0NDXoaShoKGwoFBe8XFi6ALjgJCQobCjgaShoNDQ0NehpKGgobCgoKLYEuehYXAAEAAAABAACiToc1Xw889QALBAAAAAAA0XnFFgAAAADRecUWAAAAAAJTAsAAAAAIAAIAAAAAAAAAAQAAA8D/wAAABAAAAAAAAlMAAQAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAAAAAAAACAAAAAoAAMQAAAAAACgAUAB4AmgABAAAABQBVAAIAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAADgCuAAEAAAAAAAEADgAAAAEAAAAAAAIABwCfAAEAAAAAAAMADgBLAAEAAAAAAAQADgC0AAEAAAAAAAUACwAqAAEAAAAAAAYADgB1AAEAAAAAAAoAGgDeAAMAAQQJAAEAHAAOAAMAAQQJAAIADgCmAAMAAQQJAAMAHABZAAMAAQQJAAQAHADCAAMAAQQJAAUAFgA1AAMAAQQJAAYAHACDAAMAAQQJAAoANAD4YW5jaG9yanMtaWNvbnMAYQBuAGMAaABvAHIAagBzAC0AaQBjAG8AbgBzVmVyc2lvbiAxLjAAVgBlAHIAcwBpAG8AbgAgADEALgAwYW5jaG9yanMtaWNvbnMAYQBuAGMAaABvAHIAagBzAC0AaQBjAG8AbgBzYW5jaG9yanMtaWNvbnMAYQBuAGMAaABvAHIAagBzAC0AaQBjAG8AbgBzUmVndWxhcgBSAGUAZwB1AGwAYQByYW5jaG9yanMtaWNvbnMAYQBuAGMAaABvAHIAagBzAC0AaQBjAG8AbgBzRm9udCBnZW5lcmF0ZWQgYnkgSWNvTW9vbi4ARgBvAG4AdAAgAGcAZQBuAGUAcgBhAHQAZQBkACAAYgB5ACAASQBjAG8ATQBvAG8AbgAuAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==) format(\"truetype\");' +\n        ' }',\n        pseudoElContent =\n        ' [data-anchorjs-icon]::after {'          +\n        '   content: attr(data-anchorjs-icon);'   +\n        ' }',\n        firstStyleEl;\n\n    style.className = 'anchorjs';\n    style.appendChild(document.createTextNode('')); // Necessary for Webkit.\n\n    // We place it in the head with the other style tags, if possible, so as to\n    // not look out of place. We insert before the others so these styles can be\n    // overridden if necessary.\n    firstStyleEl = document.head.querySelector('[rel=\"stylesheet\"], style');\n    if (firstStyleEl === undefined) {\n      document.head.appendChild(style);\n    } else {\n      document.head.insertBefore(style, firstStyleEl);\n    }\n\n    style.sheet.insertRule(linkRule, style.sheet.cssRules.length);\n    style.sheet.insertRule(hoverRule, style.sheet.cssRules.length);\n    style.sheet.insertRule(pseudoElContent, style.sheet.cssRules.length);\n    style.sheet.insertRule(anchorjsLinkFontFace, style.sheet.cssRules.length);\n  };\n}\n\nvar anchors = new AnchorJS();\n"],"sourceRoot":"assets/scripts/"}