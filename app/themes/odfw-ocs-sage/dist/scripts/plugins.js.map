{"version":3,"sources":["../assets/scripts/jquery.scrollNav.js","../assets/scripts/jquery.slicknav.js"],"names":["$","scroll_to","value","speed","offset","animated","length","destination","top","animate","scrollTop","get_hash","window","location","hash","S","classes","loading","failed","success","defaults","sections","subSections","sectionElem","className","showHeadline","headlineText","showTopLink","topLinkText","fixedMargin","scrollOffset","insertLocation","arrowKeys","activeClass","scrollToHash","onInit","onRender","onDestroy","onResetPos","_set_body_class","state","$body","addClass","removeClass","_find_sections","$el","target_elems","settings","raw_html","$firstElem","children","first","is","push","nextUntil","andSelf","find","each","this","raw","_setup_sections","section_data","i","sub_data","$this_section","section_id","isFirst","hasHeading","eq","text","filter","wrapAll","$sub_sections","sub_id","sub_text","$this_sub","id","sub_sections","data","_tear_down_sections","unwrap","_setup_nav","$headline","class","$wrapper","$nav","role","$nav_list","$sub_nav_list","$item","$link","href","$sub_item","$sub_link","append","nav","_insert_nav","insert_location","$insert_target","insertTarget","_setup_pos","vp_height","height","nav_offset","set_offset","section","this_height","top_offset","bottom_offset","dims","_check_pos","win_top","boundry_top","boundry_bottom","sections_active","sub_sections_active","in_view","parents","active","_init_scroll_listener","on","_rm_scroll_listeners","off","_init_resize_listener","_rm_resize_listener","_init_click_listener","e","preventDefault","attr","_rm_click_listener","_init_keyboard_listener","document","keyCode","findSection","key","l","array_offset","undefined","target_section","_rm_keyboard_listener","init","options","extend","call","console","log","selector","destroy","remove","resetPos","fn","scrollNav","method","arguments","Array","prototype","slice","error","apply","jQuery","Plugin","element","_defaults","_name","mobileMenu","label","duplicate","duration","easingOpen","easingClose","closedSymbol","openedSymbol","prependTo","appendTo","parentTag","closeOnClick","allowParentLinks","nestedParentLinks","showChildren","removeIds","removeClasses","removeStyles","brand","beforeOpen","beforeClose","afterOpen","afterClose","prefix","iconClass","menuBar","$this","menu","mobileNav","clone","removeAttr","btn","join","prepend","items","item","a","contents","containsAnchor","nodes","wrapElement","parent","$wrap","arrowElement","wrap","last","after","click","event","target","closest","hasClass","_visibilityToggle","mousedown","_outlines","keyup","_menuToggle","_itemClick","keydown","ev","stopImmediatePropagation","el","arrow","ul","next","html","trigger","_getActionItems","slideDown","_setVisAttr","slideUp","hide","hidden","nonHidden","not","anchors","links","add","css","toggle","open","close","args","returns","instance"],"mappings":"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","file":"plugins.js","sourcesContent":["/*! scrollNav - v2.6.0 - 2015-02-19\n* http://scrollnav.com\n* Copyright (c) 2015 James Wilson; Licensed MIT */\n(function($) {\n\n  // Animate scrolling to section location\n  var scroll_to = function(value, speed, offset, animated) {\n    if ( $(value).length > 0 ) {\n      var destination = $(value).offset().top;\n      speed = animated ? speed : 0;\n\n      $('html:not(:animated),body:not(:animated)')\n        .animate({scrollTop: destination - offset }, speed );\n    }\n  };\n\n  // Get url hash if one exists\n  var get_hash = function() {\n    return window.location.hash;\n  };\n\n  var S = {\n    classes: {\n      loading: 'sn-loading',\n      failed: 'sn-failed',\n      success: 'sn-active'\n    },\n    defaults: {\n      sections: 'h2',\n      subSections: false,\n      sectionElem: 'section',\n      className: 'scroll-nav',\n      showHeadline: true,\n      headlineText: 'Scroll To',\n      showTopLink: true,\n      topLinkText: 'Top',\n      fixedMargin: 40,\n      scrollOffset: 40,\n      animated: true,\n      speed: 500,\n      insertLocation: 'insertBefore',\n      arrowKeys: false,\n      activeClass: 'active',\n      scrollToHash: true,\n      onInit: null,\n      onRender: null,\n      onDestroy: null,\n      onResetPos: null\n    },\n    _set_body_class: function(state) {\n      // Set and swap our loading hooks to the body\n\n      var $body = $('body');\n\n      if (state === 'loading') {\n        $body.addClass(S.classes.loading);\n      } else if (state === 'success') {\n        $body.removeClass(S.classes.loading).addClass(S.classes.success);\n      } else {\n        $body.removeClass(S.classes.loading).addClass(S.classes.failed);\n      }\n    },\n    _find_sections: function($el) {\n      // Find the html for each section\n\n      var target_elems = S.settings.sections;\n      var raw_html = [];\n\n      if (S.settings.showTopLink) {\n        var $firstElem = $el.children().first();\n\n        if ( !$firstElem.is(target_elems) ) {\n          raw_html.push( $firstElem.nextUntil(target_elems).andSelf() );\n        }\n      }\n\n      $el.find(target_elems).each(function() {\n        raw_html.push( $(this).nextUntil(target_elems).andSelf() );\n      });\n\n      S.sections = {\n        raw: raw_html\n      };\n    },\n    _setup_sections: function(sections) {\n      // Wrap each section and add it's details to the section array\n\n      var section_data = [];\n\n      $(sections).each(function(i) {\n        var sub_data      = [];\n        var $this_section = $(this);\n        var section_id    = 'scrollNav-' + (i + 1);\n        var isFirst       = function() { return i === 0; };\n        var hasHeading    = function() { return !$this_section.eq(0).is(S.settings.sections); };\n        var text          = ( S.settings.showTopLink && isFirst() && hasHeading() ) ? S.settings.topLinkText : $this_section.filter(S.settings.sections).text();\n\n        $this_section.wrapAll('<' + S.settings.sectionElem + ' id=\"' + section_id + '\" class=\"' + S.settings.className + '__section\" />');\n\n        if (S.settings.subSections) {\n          var $sub_sections  = $this_section.filter(S.settings.subSections);\n\n          if ($sub_sections.length > 0) {\n            $sub_sections.each(function(i) {\n              var sub_id      = section_id + '-' + (i + 1);\n              var sub_text    = $(this).text();\n              var $this_sub   = $this_section.filter($(this).nextUntil($sub_sections).andSelf());\n\n              $this_sub.wrapAll('<div id=\"' + sub_id + '\" class=\"' + S.settings.className + '__sub-section\" />');\n              sub_data.push( {id: sub_id, text: sub_text} );\n            });\n          }\n        }\n\n        section_data.push( {id: section_id, text: text, sub_sections: sub_data} );\n      });\n\n      S.sections.data = section_data;\n    },\n    _tear_down_sections: function(sections) {\n      $(sections).each(function() {\n        var sub_sections = this.sub_sections;\n\n        $('#' + this.id).children().unwrap();\n\n        if (sub_sections.length > 0) {\n          $(sub_sections).each(function() {\n            $('#' + this.id).children().unwrap();\n          });\n        }\n      });\n    },\n    _setup_nav: function(sections) {\n    // Populate an ordered list from the section array we built\n\n      var $headline = $('<span />', {'class': S.settings.className + '__heading', text: S.settings.headlineText});\n      var $wrapper  = $('<div />', {'class': S.settings.className + '__wrapper'});\n      var $nav      = $('<nav />', {'class': S.settings.className, 'role': 'navigation'});\n      var $nav_list = $('<ol />', {'class': S.settings.className + '__list'});\n\n      $.each(sections, function(i) {\n        var $item     = (i === 0) ? $('<li />', {'class': S.settings.className + '__item ' + S.settings.activeClass}) : $('<li />', {'class': S.settings.className + '__item'});\n        var $link     = $('<a />', {'href': '#' + this.id, 'class': S.settings.className + '__link', text: this.text});\n        var $sub_nav_list;\n\n        if (this.sub_sections.length > 0) {\n          $item.addClass('is-parent-item');\n          $sub_nav_list = $('<ol />', {'class': S.settings.className + '__sub-list'});\n\n          $.each(this.sub_sections, function() {\n            var $sub_item = $('<li />', {'class': S.settings.className + '__sub-item'});\n            var $sub_link = $('<a />', {'href': '#' + this.id, 'class': S.settings.className + '__sub-link', text: this.text});\n\n            $sub_nav_list.append( $sub_item.append($sub_link) );\n          });\n        }\n\n        $nav_list.append( $item.append($link).append($sub_nav_list) );\n      });\n\n      if (S.settings.showHeadline) {\n        $nav.append( $wrapper.append($headline).append($nav_list) );\n      } else {\n        $nav.append( $wrapper.append($nav_list) );\n      }\n\n      S.nav = $nav;\n    },\n    _insert_nav: function() {\n      // Add the nav to our page\n\n      var insert_location = S.settings.insertLocation;\n      var $insert_target = S.settings.insertTarget;\n\n      S.nav[insert_location]($insert_target);\n    },\n    _setup_pos: function() {\n      // Find the offset positions of each section\n\n      var $nav        = S.nav;\n      var vp_height   = $(window).height();\n      var nav_offset  = $nav.offset().top;\n\n      var set_offset = function(section) {\n        var $this_section  = $('#' + section.id);\n        var this_height    = $this_section.height();\n\n        section.top_offset    = $this_section.offset().top;\n        section.bottom_offset = section.top_offset + this_height;\n      };\n\n      $.each(S.sections.data, function() {\n        set_offset(this);\n\n        $.each(this.sub_sections, function() {\n          set_offset(this);\n        });\n      });\n\n      S.dims = {\n        vp_height:  vp_height,\n        nav_offset: nav_offset\n      };\n    },\n    _check_pos: function() {\n      // Set nav to fixed after scrolling past the header and add an in-view class to any\n      // sections currently within the bounds of our view and active class to the first\n      // in-view section\n\n      var $nav                = S.nav;\n      var win_top             = $(window).scrollTop();\n      var boundry_top         = win_top + S.settings.scrollOffset;\n      var boundry_bottom      = win_top + S.dims.vp_height - S.settings.scrollOffset;\n      var sections_active     = [];\n      var sub_sections_active = [];\n\n      if ( win_top > (S.dims.nav_offset - S.settings.fixedMargin) ) { $nav.addClass('fixed'); }\n      else { $nav.removeClass('fixed'); }\n\n      var in_view = function(section) {\n        return (section.top_offset >= boundry_top && section.top_offset <= boundry_bottom) || (section.bottom_offset > boundry_top && section.bottom_offset < boundry_bottom) || (section.top_offset < boundry_top && section.bottom_offset > boundry_bottom);\n      };\n\n      $.each(S.sections.data, function() {\n        if ( in_view(this) ) {\n          sections_active.push(this);\n        }\n        $.each(this.sub_sections, function() {\n          if ( in_view(this) ) {\n            sub_sections_active.push(this);\n          }\n        });\n      });\n\n      $nav.find('.' + S.settings.className + '__item').removeClass(S.settings.activeClass).removeClass('in-view');\n      $nav.find('.' + S.settings.className + '__sub-item').removeClass(S.settings.activeClass).removeClass('in-view');\n\n      $.each(sections_active, function(i) {\n        if (i === 0) {\n          $nav.find('a[href=\"#' + this.id + '\"]').parents('.' + S.settings.className + '__item').addClass(S.settings.activeClass).addClass('in-view');\n        } else {\n          $nav.find('a[href=\"#' + this.id + '\"]').parents('.' + S.settings.className + '__item').addClass('in-view');\n        }\n      });\n      S.sections.active = sections_active;\n\n      $.each(sub_sections_active, function(i) {\n        if (i === 0) {\n          $nav.find('a[href=\"#' + this.id + '\"]').parents('.' + S.settings.className + '__sub-item').addClass(S.settings.activeClass).addClass('in-view');\n        } else {\n          $nav.find('a[href=\"#' + this.id + '\"]').parents('.' + S.settings.className + '__sub-item').addClass('in-view');\n        }\n      });\n    },\n    _init_scroll_listener: function() {\n      // Set a scroll listener to update the fixed and active classes\n\n      $(window).on('scroll.scrollNav', function() {\n        S._check_pos();\n      });\n    },\n    _rm_scroll_listeners: function() {\n      $(window).off('scroll.scrollNav');\n    },\n    _init_resize_listener: function() {\n      // Set a resize listener to update position values and the fixed and active classes\n\n      $(window).on('resize.scrollNav', function() {\n        S._setup_pos();\n        S._check_pos();\n      });\n    },\n    _rm_resize_listener: function() {\n      $(window).off('resize.scrollNav');\n    },\n    _init_click_listener: function() {\n      // Scroll to section on click\n\n      $('.' + S.settings.className).find('a').on('click.scrollNav', function(e) {\n        e.preventDefault();\n\n        var value     = $(this).attr('href');\n        var speed     = S.settings.speed;\n        var offset    = S.settings.scrollOffset;\n        var animated  = S.settings.animated;\n\n        scroll_to(value, speed, offset, animated);\n      });\n    },\n    _rm_click_listener: function() {\n      $('.' + S.settings.className).find('a').off('click.scrollNav');\n    },\n    _init_keyboard_listener: function(sections) {\n      // Scroll to section on arrow key press\n\n      if (S.settings.arrowKeys) {\n        $(document).on('keydown.scrollNav', function(e) {\n          if (e.keyCode === 40 || e.keyCode === 38) {\n            var findSection = function(key) {\n              var i = 0;\n              var l = sections.length;\n\n              for (i; i < l; i++) {\n                if (sections[i].id === S.sections.active[0].id) {\n                  var array_offset  = (key === 40) ? i + 1 : i -1;\n                  var id            = (sections[array_offset] === undefined) ? undefined : sections[array_offset].id;\n\n                  return id;\n                }\n              }\n            };\n\n            var target_section = findSection(e.keyCode);\n\n            if (target_section !== undefined) {\n              e.preventDefault();\n\n              var value     = '#' + target_section;\n              var speed     = S.settings.speed;\n              var offset    = S.settings.scrollOffset;\n              var animated  = S.settings.animated;\n\n              scroll_to(value, speed, offset, animated);\n            }\n          }\n        });\n      }\n    },\n    _rm_keyboard_listener: function() {\n      $(document).off('keydown.scrollNav');\n    },\n    init: function(options) {\n      return this.each(function() {\n        var $el = $(this);\n\n        // Merge default settings with user defined options\n        S.settings = $.extend({}, S.defaults, options);\n\n        // If the insert target isn't set, use the initialized element\n        S.settings.insertTarget = S.settings.insertTarget ? $(S.settings.insertTarget) : $el;\n\n        if ($el.length > 0) {\n          // Initialize\n\n          // Fire custom init callback\n          if (S.settings.onInit) { S.settings.onInit.call(this); }\n\n          S._set_body_class('loading');\n          S._find_sections($el);\n\n          if ( $el.find(S.settings.sections).length > 0 ) {\n            // BUILD!!!!\n\n            S._setup_sections(S.sections.raw);\n            S._setup_nav(S.sections.data);\n\n            if ( S.settings.insertTarget.length > 0 ) {\n              //Add to page\n\n              S._insert_nav();\n              S._setup_pos();\n              S._check_pos();\n              S._init_scroll_listener();\n              S._init_resize_listener();\n              S._init_click_listener();\n              S._init_keyboard_listener(S.sections.data);\n              S._set_body_class('success');\n              if (S.settings.scrollToHash){\n                scroll_to( get_hash() );\n              }\n\n              // Fire custom render callback\n              if (S.settings.onRender) { S.settings.onRender.call(this); }\n\n            } else {\n              console.log('Build failed, scrollNav could not find \"' + S.settings.insertTarget + '\"');\n              S._set_body_class('failed');\n            }\n\n          } else {\n            console.log('Build failed, scrollNav could not find any \"' + S.settings.sections + 's\" inside of \"' + $el.selector + '\"');\n            S._set_body_class('failed');\n          }\n\n        } else {\n          console.log('Build failed, scrollNav could not find \"' + $el.selector + '\"');\n          S._set_body_class('failed');\n        }\n      });\n    },\n    destroy: function() {\n      return this.each(function() {\n\n        // Unbind event listeners\n        S._rm_scroll_listeners();\n        S._rm_resize_listener();\n        S._rm_click_listener();\n        S._rm_keyboard_listener();\n\n        // Remove any of the loading hooks\n        $('body').removeClass('sn-loading sn-active sn-failed');\n\n        // Remove the nav from the dom\n        $('.' + S.settings.className).remove();\n\n        // Teardown sections\n        S._tear_down_sections(S.sections.data);\n\n        // Fire custom destroy callback\n        if (S.settings.onDestroy) { S.settings.onDestroy.call(this); }\n\n        // Remove the saved settings\n        S.settings = [];\n        S.sections = undefined;\n      });\n    },\n    resetPos: function() {\n      S._setup_pos();\n      S._check_pos();\n\n      // Fire custom reset position callback\n      if (S.settings.onResetPos) { S.settings.onResetPos.call(this); }\n    }\n  };\n\n  $.fn.scrollNav = function() {\n    var options;\n    var method  = arguments[0];\n\n    if (S[method]) {\n      // Method exists, so use it\n\n      method  = S[method];\n      options = Array.prototype.slice.call(arguments, 1);\n    } else if (typeof(method) === 'object' || !method) {\n      // No method passed, default to init\n\n      method  = S.init;\n      options = arguments;\n    } else {\n      // Method doesn't exist\n\n      $.error( 'Method ' +  method + ' does not exist in the scrollNav plugin' );\n      return this;\n    }\n\n    return method.apply(this, options);\n  };\n})(jQuery);\n","/*!\n * SlickNav Responsive Mobile Menu v1.0.6\n * (c) 2015 Josh Cope\n * licensed under MIT\n */\n;(function ($, document, window) {\n    var\n    // default settings object.\n        defaults = {\n            label: 'MENU',\n            duplicate: true,\n            duration: 200,\n            easingOpen: 'swing',\n            easingClose: 'swing',\n            closedSymbol: '&#9658;',\n            openedSymbol: '&#9660;',\n            prependTo: 'body',\n            appendTo: '',\n            parentTag: 'a',\n            closeOnClick: false,\n            allowParentLinks: false,\n            nestedParentLinks: true,\n            showChildren: false,\n            removeIds: false,\n            removeClasses: false,\n            removeStyles: false,\n\t\t\tbrand: '',\n            init: function () {},\n            beforeOpen: function () {},\n            beforeClose: function () {},\n            afterOpen: function () {},\n            afterClose: function () {}\n        },\n        mobileMenu = 'slicknav',\n        prefix = 'slicknav';\n\n    function Plugin(element, options) {\n        this.element = element;\n\n        // jQuery has an extend method which merges the contents of two or\n        // more objects, storing the result in the first object. The first object\n        // is generally empty as we don't want to alter the default options for\n        // future instances of the plugin\n        this.settings = $.extend({}, defaults, options);\n\n        this._defaults = defaults;\n        this._name = mobileMenu;\n\n        this.init();\n    }\n\n    Plugin.prototype.init = function () {\n        var $this = this,\n            menu = $(this.element),\n            settings = this.settings,\n            iconClass,\n            menuBar;\n\n        // clone menu if needed\n        if (settings.duplicate) {\n            $this.mobileNav = menu.clone();\n            //remove ids from clone to prevent css issues\n            $this.mobileNav.removeAttr('id');\n            $this.mobileNav.find('*').each(function (i, e) {\n                $(e).removeAttr('id');\n            });\n        } else {\n            $this.mobileNav = menu;\n\n            // remove ids if set\n            $this.mobileNav.removeAttr('id');\n            $this.mobileNav.find('*').each(function (i, e) {\n                $(e).removeAttr('id');\n            });\n        }\n\n        // remove classes if set\n        if (settings.removeClasses) {\n            $this.mobileNav.removeAttr('class');\n            $this.mobileNav.find('*').each(function (i, e) {\n                $(e).removeAttr('class');\n            });\n        }\n        \n        // remove styles if set\n        if (settings.removeStyles) {\n            $this.mobileNav.removeAttr('style');\n            $this.mobileNav.find('*').each(function (i, e) {\n                $(e).removeAttr('style');\n            });\n        }\n\n        // styling class for the button\n        iconClass = prefix + '_icon';\n\n        if (settings.label === '') {\n            iconClass += ' ' + prefix + '_no-text';\n        }\n\n        if (settings.parentTag == 'a') {\n            settings.parentTag = 'a href=\"#\"';\n        }\n\n        // create menu bar\n        $this.mobileNav.attr('class', prefix + '_nav');\n        menuBar = $('<div class=\"' + prefix + '_menu\"></div>');\n\t\tif (settings.brand !== '') {\n\t\t\tvar brand = $('<div class=\"' + prefix + '_brand\">'+settings.brand+'</div>');\n\t\t\t$(menuBar).append(brand);\n\t\t}\n        $this.btn = $(\n            ['<' + settings.parentTag + ' aria-haspopup=\"true\" tabindex=\"0\" class=\"' + prefix + '_btn ' + prefix + '_collapsed\">',\n                '<span class=\"' + prefix + '_menutxt\">' + settings.label + '</span>',\n                '<span class=\"' + iconClass + '\">',\n                    '<span class=\"' + prefix + '_icon-bar\"></span>',\n                    '<span class=\"' + prefix + '_icon-bar\"></span>',\n                    '<span class=\"' + prefix + '_icon-bar\"></span>',\n                '</span>',\n            '</' + settings.parentTag + '>'\n            ].join('')\n        );\n        $(menuBar).append($this.btn);\n        if(settings.appendTo !== '') {\n            $(settings.appendTo).append(menuBar);\n        } else {\n            $(settings.prependTo).prepend(menuBar);\n        }\n        menuBar.append($this.mobileNav);\n\n        // iterate over structure adding additional structure\n        var items = $this.mobileNav.find('li');\n        $(items).each(function () {\n            var item = $(this),\n                data = {};\n            data.children = item.children('ul').attr('role', 'menu');\n            item.data('menu', data);\n\n            // if a list item has a nested menu\n            if (data.children.length > 0) {\n\n                // select all text before the child menu\n                // check for anchors\n\n                var a = item.contents(),\n                    containsAnchor = false,\n                    nodes = [];\n\n                $(a).each(function () {\n                    if (!$(this).is('ul')) {\n                        nodes.push(this);\n                    } else {\n                        return false;\n                    }\n\n                    if($(this).is(\"a\")) {\n                        containsAnchor = true;\n                    }\n                });\n\n                var wrapElement = $(\n                    '<' + settings.parentTag + ' role=\"menuitem\" aria-haspopup=\"true\" tabindex=\"-1\" class=\"' + prefix + '_item\"/>'\n                );\n\n                // wrap item text with tag and add classes unless we are separating parent links\n                if ((!settings.allowParentLinks || settings.nestedParentLinks) || !containsAnchor) {\n                    var $wrap = $(nodes).wrapAll(wrapElement).parent();\n                    $wrap.addClass(prefix+'_row');\n                } else\n                    $(nodes).wrapAll('<span class=\"'+prefix+'_parent-link '+prefix+'_row\"/>').parent();\n\n                if (!settings.showChildren) {\n                    item.addClass(prefix+'_collapsed');\n                } else {\n                    item.addClass(prefix+'_open');\n                }\n\n                item.addClass(prefix+'_parent');\n\n                // create parent arrow. wrap with link if parent links and separating\n                var arrowElement = $('<span class=\"'+prefix+'_arrow\">'+(settings.showChildren?settings.openedSymbol:settings.closedSymbol)+'</span>');\n\n                if (settings.allowParentLinks && !settings.nestedParentLinks && containsAnchor)\n                    arrowElement = arrowElement.wrap(wrapElement).parent();\n\n                //append arrow\n                $(nodes).last().after(arrowElement);\n\n\n            } else if ( item.children().length === 0) {\n                 item.addClass(prefix+'_txtnode');\n            }\n\n            // accessibility for links\n            item.children('a').attr('role', 'menuitem').click(function(event){\n                //Ensure that it's not a parent\n                if (settings.closeOnClick && !$(event.target).parent().closest('li').hasClass(prefix+'_parent')) {\n                        //Emulate menu close if set\n                        $($this.btn).click();\n                    }\n            });\n\n            //also close on click if parent links are set\n            if (settings.closeOnClick && settings.allowParentLinks) {\n                item.children('a').children('a').click(function (event) {\n                    //Emulate menu close\n                    $($this.btn).click();\n                });\n\n                item.find('.'+prefix+'_parent-link a:not(.'+prefix+'_item)').click(function(event){\n                    //Emulate menu close\n                        $($this.btn).click();\n                });\n            }\n        });\n\n        // structure is in place, now hide appropriate items\n        $(items).each(function () {\n            var data = $(this).data('menu');\n            if (!settings.showChildren){\n                $this._visibilityToggle(data.children, null, false, null, true);\n            }\n        });\n\n        // finally toggle entire menu\n        $this._visibilityToggle($this.mobileNav, null, false, 'init', true);\n\n        // accessibility for menu button\n        $this.mobileNav.attr('role','menu');\n\n        // outline prevention when using mouse\n        $(document).mousedown(function(){\n            $this._outlines(false);\n        });\n\n        $(document).keyup(function(){\n            $this._outlines(true);\n        });\n\n        // menu button click\n        $($this.btn).click(function (e) {\n            e.preventDefault();\n            $this._menuToggle();\n        });\n\n        // click on menu parent\n        $this.mobileNav.on('click', '.' + prefix + '_item', function (e) {\n            e.preventDefault();\n            $this._itemClick($(this));\n        });\n\n        // check for enter key on menu button and menu parents\n        $($this.btn).keydown(function (e) {\n            var ev = e || event;\n            if(ev.keyCode == 13) {\n                e.preventDefault();\n                $this._menuToggle();\n            }\n        });\n\n        $this.mobileNav.on('keydown', '.'+prefix+'_item', function(e) {\n            var ev = e || event;\n            if(ev.keyCode == 13) {\n                e.preventDefault();\n                $this._itemClick($(e.target));\n            }\n        });\n\n        // allow links clickable within parent tags if set\n        if (settings.allowParentLinks && settings.nestedParentLinks) {\n            $('.'+prefix+'_item a').click(function(e){\n                    e.stopImmediatePropagation();\n            });\n        }\n    };\n\n    //toggle menu\n    Plugin.prototype._menuToggle = function (el) {\n        var $this = this;\n        var btn = $this.btn;\n        var mobileNav = $this.mobileNav;\n\n        if (btn.hasClass(prefix+'_collapsed')) {\n            btn.removeClass(prefix+'_collapsed');\n            btn.addClass(prefix+'_open');\n        } else {\n            btn.removeClass(prefix+'_open');\n            btn.addClass(prefix+'_collapsed');\n        }\n        btn.addClass(prefix+'_animating');\n        $this._visibilityToggle(mobileNav, btn.parent(), true, btn);\n    };\n\n    // toggle clicked items\n    Plugin.prototype._itemClick = function (el) {\n        var $this = this;\n        var settings = $this.settings;\n        var data = el.data('menu');\n        if (!data) {\n            data = {};\n            data.arrow = el.children('.'+prefix+'_arrow');\n            data.ul = el.next('ul');\n            data.parent = el.parent();\n            //Separated parent link structure\n            if (data.parent.hasClass(prefix+'_parent-link')) {\n                data.parent = el.parent().parent();\n                data.ul = el.parent().next('ul');\n            }\n            el.data('menu', data);\n        }\n        if (data.parent.hasClass(prefix+'_collapsed')) {\n            data.arrow.html(settings.openedSymbol);\n            data.parent.removeClass(prefix+'_collapsed');\n            data.parent.addClass(prefix+'_open');\n            data.parent.addClass(prefix+'_animating');\n            $this._visibilityToggle(data.ul, data.parent, true, el);\n        } else {\n            data.arrow.html(settings.closedSymbol);\n            data.parent.addClass(prefix+'_collapsed');\n            data.parent.removeClass(prefix+'_open');\n            data.parent.addClass(prefix+'_animating');\n            $this._visibilityToggle(data.ul, data.parent, true, el);\n        }\n    };\n\n    // toggle actual visibility and accessibility tags\n    Plugin.prototype._visibilityToggle = function(el, parent, animate, trigger, init) {\n        var $this = this;\n        var settings = $this.settings;\n        var items = $this._getActionItems(el);\n        var duration = 0;\n        if (animate) {\n            duration = settings.duration;\n        }\n\n        if (el.hasClass(prefix+'_hidden')) {\n            el.removeClass(prefix+'_hidden');\n             //Fire beforeOpen callback\n                if (!init) {\n                    settings.beforeOpen(trigger);\n                }\n            el.slideDown(duration, settings.easingOpen, function(){\n\n                $(trigger).removeClass(prefix+'_animating');\n                $(parent).removeClass(prefix+'_animating');\n\n                //Fire afterOpen callback\n                if (!init) {\n                    settings.afterOpen(trigger);\n                }\n            });\n            el.attr('aria-hidden','false');\n            items.attr('tabindex', '0');\n            $this._setVisAttr(el, false);\n        } else {\n            el.addClass(prefix+'_hidden');\n\n            //Fire init or beforeClose callback\n            if (!init){\n                settings.beforeClose(trigger);\n            }\n\n            el.slideUp(duration, this.settings.easingClose, function() {\n                el.attr('aria-hidden','true');\n                items.attr('tabindex', '-1');\n                $this._setVisAttr(el, true);\n                el.hide(); //jQuery 1.7 bug fix\n\n                $(trigger).removeClass(prefix+'_animating');\n                $(parent).removeClass(prefix+'_animating');\n\n                //Fire init or afterClose callback\n                if (!init){\n                    settings.afterClose(trigger);\n                } else if (trigger == 'init'){\n                    settings.init();\n                }\n            });\n        }\n    };\n\n    // set attributes of element and children based on visibility\n    Plugin.prototype._setVisAttr = function(el, hidden) {\n        var $this = this;\n\n        // select all parents that aren't hidden\n        var nonHidden = el.children('li').children('ul').not('.'+prefix+'_hidden');\n\n        // iterate over all items setting appropriate tags\n        if (!hidden) {\n            nonHidden.each(function(){\n                var ul = $(this);\n                ul.attr('aria-hidden','false');\n                var items = $this._getActionItems(ul);\n                items.attr('tabindex', '0');\n                $this._setVisAttr(ul, hidden);\n            });\n        } else {\n            nonHidden.each(function(){\n                var ul = $(this);\n                ul.attr('aria-hidden','true');\n                var items = $this._getActionItems(ul);\n                items.attr('tabindex', '-1');\n                $this._setVisAttr(ul, hidden);\n            });\n        }\n    };\n\n    // get all 1st level items that are clickable\n    Plugin.prototype._getActionItems = function(el) {\n        var data = el.data(\"menu\");\n        if (!data) {\n            data = {};\n            var items = el.children('li');\n            var anchors = items.find('a');\n            data.links = anchors.add(items.find('.'+prefix+'_item'));\n            el.data('menu', data);\n        }\n        return data.links;\n    };\n\n    Plugin.prototype._outlines = function(state) {\n        if (!state) {\n            $('.'+prefix+'_item, .'+prefix+'_btn').css('outline','none');\n        } else {\n            $('.'+prefix+'_item, .'+prefix+'_btn').css('outline','');\n        }\n    };\n\n    Plugin.prototype.toggle = function(){\n        var $this = this;\n        $this._menuToggle();\n    };\n\n    Plugin.prototype.open = function(){\n        var $this = this;\n        if ($this.btn.hasClass(prefix+'_collapsed')) {\n            $this._menuToggle();\n        }\n    };\n\n    Plugin.prototype.close = function(){\n        var $this = this;\n        if ($this.btn.hasClass(prefix+'_open')) {\n            $this._menuToggle();\n        }\n    };\n\n    $.fn[mobileMenu] = function ( options ) {\n        var args = arguments;\n\n        // Is the first parameter an object (options), or was omitted, instantiate a new instance\n        if (options === undefined || typeof options === 'object') {\n            return this.each(function () {\n\n                // Only allow the plugin to be instantiated once due to methods\n                if (!$.data(this, 'plugin_' + mobileMenu)) {\n\n                    // if it has no instance, create a new one, pass options to our plugin constructor,\n                    // and store the plugin instance in the elements jQuery data object.\n                    $.data(this, 'plugin_' + mobileMenu, new Plugin( this, options ));\n                }\n            });\n\n        // If is a string and doesn't start with an underscore or 'init' function, treat this as a call to a public method.\n        } else if (typeof options === 'string' && options[0] !== '_' && options !== 'init') {\n\n            // Cache the method call to make it possible to return a value\n            var returns;\n\n            this.each(function () {\n                var instance = $.data(this, 'plugin_' + mobileMenu);\n\n                // Tests that there's already a plugin-instance and checks that the requested public method exists\n                if (instance instanceof Plugin && typeof instance[options] === 'function') {\n\n                    // Call the method of our plugin instance, and pass it the supplied arguments.\n                    returns = instance[options].apply( instance, Array.prototype.slice.call( args, 1 ) );\n                }\n            });\n\n            // If the earlier cached method gives a value back return the value, otherwise return this to preserve chainability.\n            return returns !== undefined ? returns : this;\n        }\n    };\n}(jQuery, document, window));\n"],"sourceRoot":"assets/scripts/"}