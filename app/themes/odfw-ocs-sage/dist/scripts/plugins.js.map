{"version":3,"sources":["../assets/scripts/jquery.scrollNav.js"],"names":["$","scroll_to","value","speed","offset","animated","length","destination","top","S","settings","className","removeClass","addClass","animate","scrollTop","get_hash","window","location","hash","classes","loading","failed","success","defaults","sections","subSections","sectionElem","showHeadline","headlineText","showTopLink","topLinkText","fixedMargin","scrollOffset","fixedHeaderSize","insertLocation","arrowKeys","activeClass","scrollToHash","onInit","onRender","onDestroy","onResetPos","_set_body_class","state","$body","_find_sections","$el","target_elems","raw_html","$firstElem","children","first","is","push","nextUntil","andSelf","find","each","this","raw","_setup_sections","section_data","i","sub_data","$this_section","section_id","isFirst","hasHeading","eq","text","filter","wrapAll","$sub_sections","sub_id","sub_text","$this_sub","id","sub_sections","data","_tear_down_sections","unwrap","_setup_nav","$headline","class","$wrapper","$nav","role","$nav_list","$sub_nav_list","$item","$link","href","$sub_item","$sub_link","append","nav","_insert_nav","insert_location","$insert_target","insertTarget","_setup_pos","vp_height","height","nav_offset","set_offset","section","this_height","top_offset","bottom_offset","dims","_check_pos","win_top","boundry_top","boundry_bottom","sections_active","sub_sections_active","in_view","parents","active","_init_scroll_listener","on","_rm_scroll_listeners","off","_init_resize_listener","_rm_resize_listener","_init_click_listener","e","preventDefault","attr","_rm_click_listener","_init_keyboard_listener","document","keyCode","findSection","key","l","array_offset","undefined","target_section","_rm_keyboard_listener","init","options","extend","call","console","log","selector","destroy","remove","resetPos","fn","scrollNav","method","arguments","Array","prototype","slice","error","apply","jQuery"],"mappings":"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","file":"plugins.js","sourcesContent":["/*! scrollNav - v2.6.0 - 2015-02-19\n* http://scrollnav.com\n* Copyright (c) 2015 James Wilson; Licensed MIT */\n(function($) {\n\n  // Animate scrolling to section location\n  var scroll_to = function(value, speed, offset, animated) {\n    if ( $(value).length > 0 ) {\n      var destination = $(value).offset().top;\n      speed = animated ? speed : 0;\n\n\t  // Add a class to the scrolled-to section\n\t  //scroll-nav__focused-section\n\t  $('.' + S.settings.className + '__focused-section').removeClass(S.settings.className + '__focused-section');\n\t  $(value).addClass(S.settings.className + '__focused-section');\n\n      $('html:not(:animated),body:not(:animated)')\n        .animate({scrollTop: destination - offset }, speed );\n    }\n  };\n\n  // Get url hash if one exists\n  var get_hash = function() {\n    return window.location.hash;\n  };\n\n  var S = {\n    classes: {\n      loading: 'sn-loading',\n      failed: 'sn-failed',\n      success: 'sn-active'\n    },\n    defaults: {\n      sections: 'h2',\n      subSections: false,\n      sectionElem: 'section',\n      className: 'scroll-nav',\n      showHeadline: true,\n      headlineText: 'Scroll To',\n      showTopLink: true,\n      topLinkText: 'Top',\n      fixedMargin: 40,\n      scrollOffset: 40,\n\t  fixedHeaderSize: 0,\n\t  animated: true,\n      speed: 500,\n      insertLocation: 'insertBefore',\n      arrowKeys: false,\n      activeClass: 'active',\n      scrollToHash: true,\n      onInit: null,\n      onRender: null,\n      onDestroy: null,\n      onResetPos: null\n    },\n    _set_body_class: function(state) {\n      // Set and swap our loading hooks to the body\n\n      var $body = $('body');\n\n      if (state === 'loading') {\n        $body.addClass(S.classes.loading);\n      } else if (state === 'success') {\n        $body.removeClass(S.classes.loading).addClass(S.classes.success);\n      } else {\n        $body.removeClass(S.classes.loading).addClass(S.classes.failed);\n      }\n    },\n    _find_sections: function($el) {\n      // Find the html for each section\n\n      var target_elems = S.settings.sections;\n      var raw_html = [];\n\n      if (S.settings.showTopLink) {\n        var $firstElem = $el.children().first();\n\n        if ( !$firstElem.is(target_elems) ) {\n          raw_html.push( $firstElem.nextUntil(target_elems).andSelf() );\n        }\n      }\n\n      $el.find(target_elems).each(function() {\n        raw_html.push( $(this).nextUntil(target_elems).andSelf() );\n      });\n\n      S.sections = {\n        raw: raw_html\n      };\n    },\n    _setup_sections: function(sections) {\n      // Wrap each section and add it's details to the section array\n\n      var section_data = [];\n\n      $(sections).each(function(i) {\n        var sub_data      = [];\n        var $this_section = $(this);\n        var section_id    = 'scrollNav-' + (i + 1);\n        var isFirst       = function() { return i === 0; };\n        var hasHeading    = function() { return !$this_section.eq(0).is(S.settings.sections); };\n        var text          = ( S.settings.showTopLink && isFirst() && hasHeading() ) ? S.settings.topLinkText : $this_section.filter(S.settings.sections).text();\n\n        $this_section.wrapAll('<' + S.settings.sectionElem + ' id=\"' + section_id + '\" class=\"' + S.settings.className + '__section\" />');\n\n        if (S.settings.subSections) {\n          var $sub_sections  = $this_section.filter(S.settings.subSections);\n\n          if ($sub_sections.length > 0) {\n            $sub_sections.each(function(i) {\n              var sub_id      = section_id + '-' + (i + 1);\n              var sub_text    = $(this).text();\n              var $this_sub   = $this_section.filter($(this).nextUntil($sub_sections).andSelf());\n\n              $this_sub.wrapAll('<div id=\"' + sub_id + '\" class=\"' + S.settings.className + '__sub-section\" />');\n              sub_data.push( {id: sub_id, text: sub_text} );\n            });\n          }\n        }\n\n        section_data.push( {id: section_id, text: text, sub_sections: sub_data} );\n      });\n\n      S.sections.data = section_data;\n    },\n    _tear_down_sections: function(sections) {\n      $(sections).each(function() {\n        var sub_sections = this.sub_sections;\n\n        $('#' + this.id).children().unwrap();\n\n        if (sub_sections.length > 0) {\n          $(sub_sections).each(function() {\n            $('#' + this.id).children().unwrap();\n          });\n        }\n      });\n    },\n    _setup_nav: function(sections) {\n    // Populate an ordered list from the section array we built\n\n      var $headline = $('<span />', {'class': S.settings.className + '__heading', text: S.settings.headlineText});\n      var $wrapper  = $('<div />', {'class': S.settings.className + '__wrapper'});\n      var $nav      = $('<nav />', {'class': S.settings.className, 'role': 'navigation'});\n      var $nav_list = $('<ol />', {'class': S.settings.className + '__list'});\n\n      $.each(sections, function(i) {\n        var $item     = (i === 0) ? $('<li />', {'class': S.settings.className + '__item ' + S.settings.activeClass}) : $('<li />', {'class': S.settings.className + '__item'});\n        var $link     = $('<a />', {'href': '#' + this.id, 'class': S.settings.className + '__link', text: this.text});\n        var $sub_nav_list;\n\n        if (this.sub_sections.length > 0) {\n          $item.addClass('is-parent-item');\n          $sub_nav_list = $('<ol />', {'class': S.settings.className + '__sub-list'});\n\n          $.each(this.sub_sections, function() {\n            var $sub_item = $('<li />', {'class': S.settings.className + '__sub-item'});\n            var $sub_link = $('<a />', {'href': '#' + this.id, 'class': S.settings.className + '__sub-link', text: this.text});\n\n            $sub_nav_list.append( $sub_item.append($sub_link) );\n          });\n        }\n\n        $nav_list.append( $item.append($link).append($sub_nav_list) );\n      });\n\n      if (S.settings.showHeadline) {\n        $nav.append( $wrapper.append($headline).append($nav_list) );\n      } else {\n        $nav.append( $wrapper.append($nav_list) );\n      }\n\n      S.nav = $nav;\n    },\n    _insert_nav: function() {\n      // Add the nav to our page\n\n      var insert_location = S.settings.insertLocation;\n      var $insert_target = S.settings.insertTarget;\n\n      S.nav[insert_location]($insert_target);\n    },\n    _setup_pos: function() {\n      // Find the offset positions of each section\n\n      var $nav        = S.nav;\n      var vp_height   = $(window).height();\n      var nav_offset  = $nav.offset().top;\n\n      var set_offset = function(section) {\n        var $this_section  = $('#' + section.id);\n        var this_height    = $this_section.height();\n\n        section.top_offset    = $this_section.offset().top;\n        section.bottom_offset = section.top_offset + this_height;\n      };\n\n      $.each(S.sections.data, function() {\n        set_offset(this);\n\n        $.each(this.sub_sections, function() {\n          set_offset(this);\n        });\n      });\n\n      S.dims = {\n        vp_height:  vp_height,\n        nav_offset: nav_offset\n      };\n    },\n    _check_pos: function() {\n      // Set nav to fixed after scrolling past the header and add an in-view class to any\n      // sections currently within the bounds of our view and active class to the first\n      // in-view section\n\n      var $nav                = S.nav;\n\t  var win_top             = $(window).scrollTop();\n      var boundry_top         = win_top + S.settings.scrollOffset + S.settings.fixedHeaderSize;\n      var boundry_bottom      = win_top + S.dims.vp_height - S.settings.scrollOffset;\n      var sections_active     = [];\n      var sub_sections_active = [];\n\n      if ( win_top > (S.dims.nav_offset - S.settings.fixedMargin) ) { $nav.addClass('fixed'); }\n      else { $nav.removeClass('fixed'); }\n\n\t  // dynamic by passing in a JQ selector?\n\t  // or get the padding-top from the body?\n\t  // S.settings.fixedHeaderSize\n      var in_view = function(section) {\n        return (section.top_offset >= boundry_top && section.top_offset <= boundry_bottom) || (section.bottom_offset > boundry_top && section.bottom_offset < boundry_bottom) || (section.top_offset < boundry_top && section.bottom_offset > boundry_bottom);\n      };\n\n      $.each(S.sections.data, function() {\n        if ( in_view(this) ) {\n          sections_active.push(this);\n        }\n        $.each(this.sub_sections, function() {\n          if ( in_view(this) ) {\n            sub_sections_active.push(this);\n          }\n        });\n      });\n\n      $nav.find('.' + S.settings.className + '__item').removeClass(S.settings.activeClass).removeClass('in-view');\n      $nav.find('.' + S.settings.className + '__sub-item').removeClass(S.settings.activeClass).removeClass('in-view');\n\n      $.each(sections_active, function(i) {\n        if (i === 0) {\n          $nav.find('a[href=\"#' + this.id + '\"]').parents('.' + S.settings.className + '__item').addClass(S.settings.activeClass).addClass('in-view');\n        } else {\n          $nav.find('a[href=\"#' + this.id + '\"]').parents('.' + S.settings.className + '__item').addClass('in-view');\n        }\n      });\n      S.sections.active = sections_active;\n\n      $.each(sub_sections_active, function(i) {\n        if (i === 0) {\n          $nav.find('a[href=\"#' + this.id + '\"]').parents('.' + S.settings.className + '__sub-item').addClass(S.settings.activeClass).addClass('in-view');\n        } else {\n          $nav.find('a[href=\"#' + this.id + '\"]').parents('.' + S.settings.className + '__sub-item').addClass('in-view');\n        }\n      });\n    },\n    _init_scroll_listener: function() {\n      // Set a scroll listener to update the fixed and active classes\n\n      $(window).on('scroll.scrollNav', function() {\n        S._check_pos();\n      });\n    },\n    _rm_scroll_listeners: function() {\n      $(window).off('scroll.scrollNav');\n    },\n    _init_resize_listener: function() {\n      // Set a resize listener to update position values and the fixed and active classes\n\n      $(window).on('resize.scrollNav', function() {\n        S._setup_pos();\n        S._check_pos();\n      });\n    },\n    _rm_resize_listener: function() {\n      $(window).off('resize.scrollNav');\n    },\n    _init_click_listener: function() {\n      // Scroll to section on click\n\n      $('.' + S.settings.className).find('a').on('click.scrollNav', function(e) {\n        e.preventDefault();\n\n        var value     = $(this).attr('href');\n        var speed     = S.settings.speed;\n        var offset    = S.settings.scrollOffset;\n        var animated  = S.settings.animated;\n\n        scroll_to(value, speed, offset, animated);\n      });\n    },\n    _rm_click_listener: function() {\n      $('.' + S.settings.className).find('a').off('click.scrollNav');\n    },\n    _init_keyboard_listener: function(sections) {\n      // Scroll to section on arrow key press\n\n      if (S.settings.arrowKeys) {\n        $(document).on('keydown.scrollNav', function(e) {\n          if (e.keyCode === 40 || e.keyCode === 38) {\n            var findSection = function(key) {\n              var i = 0;\n              var l = sections.length;\n\n              for (i; i < l; i++) {\n                if (sections[i].id === S.sections.active[0].id) {\n                  var array_offset  = (key === 40) ? i + 1 : i -1;\n                  var id            = (sections[array_offset] === undefined) ? undefined : sections[array_offset].id;\n\n                  return id;\n                }\n              }\n            };\n\n            var target_section = findSection(e.keyCode);\n\n            if (target_section !== undefined) {\n              e.preventDefault();\n\n              var value     = '#' + target_section;\n              var speed     = S.settings.speed;\n              var offset    = S.settings.scrollOffset;\n              var animated  = S.settings.animated;\n\n              scroll_to(value, speed, offset, animated);\n            }\n          }\n        });\n      }\n    },\n    _rm_keyboard_listener: function() {\n      $(document).off('keydown.scrollNav');\n    },\n    init: function(options) {\n      return this.each(function() {\n        var $el = $(this);\n\n        // Merge default settings with user defined options\n        S.settings = $.extend({}, S.defaults, options);\n\n        // If the insert target isn't set, use the initialized element\n        S.settings.insertTarget = S.settings.insertTarget ? $(S.settings.insertTarget) : $el;\n\n        if ($el.length > 0) {\n          // Initialize\n\n          // Fire custom init callback\n          if (S.settings.onInit) { S.settings.onInit.call(this); }\n\n          S._set_body_class('loading');\n          S._find_sections($el);\n\n          if ( $el.find(S.settings.sections).length > 0 ) {\n            // BUILD!!!!\n\n            S._setup_sections(S.sections.raw);\n            S._setup_nav(S.sections.data);\n\n            if ( S.settings.insertTarget.length > 0 ) {\n              //Add to page\n\n              S._insert_nav();\n              S._setup_pos();\n              S._check_pos();\n              S._init_scroll_listener();\n              S._init_resize_listener();\n              S._init_click_listener();\n              S._init_keyboard_listener(S.sections.data);\n              S._set_body_class('success');\n              if (S.settings.scrollToHash){\n                scroll_to( get_hash() );\n              }\n\n              // Fire custom render callback\n              if (S.settings.onRender) { S.settings.onRender.call(this); }\n\n            } else {\n              console.log('Build failed, scrollNav could not find \"' + S.settings.insertTarget + '\"');\n              S._set_body_class('failed');\n            }\n\n          } else {\n            console.log('Build failed, scrollNav could not find any \"' + S.settings.sections + 's\" inside of \"' + $el.selector + '\"');\n            S._set_body_class('failed');\n          }\n\n        } else {\n          console.log('Build failed, scrollNav could not find \"' + $el.selector + '\"');\n          S._set_body_class('failed');\n        }\n      });\n    },\n    destroy: function() {\n      return this.each(function() {\n\n        // Unbind event listeners\n        S._rm_scroll_listeners();\n        S._rm_resize_listener();\n        S._rm_click_listener();\n        S._rm_keyboard_listener();\n\n        // Remove any of the loading hooks\n        $('body').removeClass('sn-loading sn-active sn-failed');\n\n        // Remove the nav from the dom\n        $('.' + S.settings.className).remove();\n\n        // Teardown sections\n        S._tear_down_sections(S.sections.data);\n\n        // Fire custom destroy callback\n        if (S.settings.onDestroy) { S.settings.onDestroy.call(this); }\n\n        // Remove the saved settings\n        S.settings = [];\n        S.sections = undefined;\n      });\n    },\n    resetPos: function() {\n      S._setup_pos();\n      S._check_pos();\n\n      // Fire custom reset position callback\n      if (S.settings.onResetPos) { S.settings.onResetPos.call(this); }\n    }\n  };\n\n  $.fn.scrollNav = function() {\n    var options;\n    var method  = arguments[0];\n\n    if (S[method]) {\n      // Method exists, so use it\n\n      method  = S[method];\n      options = Array.prototype.slice.call(arguments, 1);\n    } else if (typeof(method) === 'object' || !method) {\n      // No method passed, default to init\n\n      method  = S.init;\n      options = arguments;\n    } else {\n      // Method doesn't exist\n\n      $.error( 'Method ' +  method + ' does not exist in the scrollNav plugin' );\n      return this;\n    }\n\n    return method.apply(this, options);\n  };\n})(jQuery);\n"],"sourceRoot":"assets/scripts/"}